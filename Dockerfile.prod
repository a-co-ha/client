# 가져올 이미지를 정의
FROM node:16-alpine AS builder
# 경로 설정하기
WORKDIR /app
# package.json 워킹 디렉토리에 복사
COPY package* yarn.lock .pnp* ./
COPY .yarnrc.yml ./
COPY .yarn ./.yarn
# 의존성 설치
RUN yarn --immutable
# 의존성 설치 후 현재 디렉토리의 모든 파일을 도커 컨테이너의 워킹 디렉토리에 복사한다.
COPY . ./
# docker-compose-prod에 명시된 args(변수)를 이미지 빌드시 환경 변수로 사용한다. 순서 주의
ARG NEXT_PUBLIC_API_MOCKING
ENV NEXT_PUBLIC_API_MOCKING=${NEXT_PUBLIC_API_MOCKING}
# product 빌드 == next build
RUN yarn build
# nextjs를 docker에 올리기위해 필요
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# nextjs 정적 파일의 output을 자동으로 추적해서 이미지 사이즈 감소
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# nginx
FROM nginx
COPY --from=builder /app/build /usr/share/nginx/html

# 3000번 포트 노출
EXPOSE 3000
# yarn dev 스크립트 실행
CMD ["yarn", "start"]
# 그리고 Dockerfile로 docker 이미지를 빌드해야한다.
# $ docker build .